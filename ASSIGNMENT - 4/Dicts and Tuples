#Problem 1
user_dict = {}
n = int(input("Enter the number of key-value pairs: "))
for i in range(n):
    key = input(f"Enter key #{i+1}: ")
    value = input(f"Enter value for key '{key}': ")
    user_dict[key] = value
tuple_list = list(user_dict.items()
print("Dictionary:", user_dict)
print("List of tuples:", tuple_list)



#Problem 2
my_dict = {}
n = int(input("How many items do you want to enter? "))
for i in range(n):
    key = input(f"Enter key #{i+1}: ")
    value = input(f"Enter value for key '{key}': ")
    my_dict[key] = value
freq = {}
for val in my_dict.values():
    if val in freq:
        freq[val] += 1
    else:
        freq[val] = 1
print("Original dictionary:", my_dict)
print("Frequency of values:", freq)



#Problem 3
my_dict = {}
n = int(input("How many items do you want to enter? "))
for i in range(n):
    key = input(f"Enter key #{i+1}: ")
    value = int(input(f"Enter integer value for key '{key}': "))
    my_dict[key] = value
if my_dict:
    min_val = min(my_dict.values())
    max_val = max(my_dict.values())

    print("Dictionary:", my_dict)
    print("Minimum value:", min_val)
    print("Maximum value:", max_val)
else:
    print("The dictionary is empty.")

#Problem 4
my_dict = {}
n = int(input("How many items do you want to enter? "))
for i in range(n):
    key = input(f"Enter key #{i+1}: ")
    value = input(f"Enter value for key '{key}': ")
    my_dict[key] = value
search_value = input("Enter the value to search for: ")
if search_value in my_dict.values():
    print(f"The value '{search_value}' is present in the dictionary.")
else:
    print(f"The value '{search_value}' is NOT present in the dictionary.")



#Problem 5
my_dict = {}
n = int(input("How many items do you want to enter? "))
for i in range(n):
    key = input(f"Enter key #{i+1}: ")
    value = input(f"Enter value for key '{key}': ")
    my_dict[key] = value
search_key = input("Enter the key to search for: ")
if search_key in my_dict:
    print(f"The key '{search_key}' is present in the dictionary.")
else:
    print(f"The key '{search_key}' is NOT present in the dictionary.")



#Problem 6
user_input = input("Enter numbers separated by commas (e.g. 5,3,8,1): ")
user_tuple = tuple(int(x.strip()) for x in user_input.split(','))
sorted_tuple = tuple(sorted(user_tuple))
print("Original tuple:", user_tuple)
print("Sorted tuple (ascending):", sorted_tuple)



#Problem 7
list_of_tuples = [(1, 2), (3, 4), (5, 6)]
list_of_lists = []
for tup in list_of_tuples:
    list_of_lists.append(list(tup))
print("Original list of tuples:", list_of_tuples)
print("Converted list of lists:", list_of_lists)



#Problem 8
my_tuple = (10, 20, 30, 40)
my_list = list(my_tuple)
print("Original tuple:", my_tuple)
print("Converted list:", my_list)



#Problem 9
tuple1 = (1, 2, 3)
tuple2 = (4, 5, 6)
concatenated = tuple1 + tuple2
print("Tuple 1:", tuple1)
print("Tuple 2:", tuple2)
print("Concatenated tuple:", concatenated)



#Problem 10
my_tuple = (1, 2, 3, 4, 5)
reversed_tuple = my_tuple[::-1]
print("Original tuple:", my_tuple)
print("Reversed tuple:", reversed_tuple)


#Problem 11
# Sample dictionary
my_dict = {
    'a': 10,
    'b': 5,
    'c': 20,
    'd': 5,
    'e': 20
}
max_value = max(my_dict.values())
min_value = min(my_dict.values())
max_keys = [key for key, value in my_dict.items() if value == max_value]
min_keys = [key for key, value in my_dict.items() if value == min_value]
print("Dictionary:", my_dict)
print(f"Max value: {max_value} found in keys: {max_keys}")
print(f"Min value: {min_value} found in keys: {min_keys}")

#Problem 12
my_dict = {'a': 3, 'b': 1, 'c': 2, 'd': 5}
sorted_items = sorted(my_dict.items(), key=lambda item: item[1])
sorted_dict = dict(sorted_items)
print("Original dictionary:", my_dict)
print("Sorted by values:", sorted_items)
print("Sorted dictionary:", sorted_dict)



#Problem 13
my_dict = {'a': 1, 'b': 2, 'c': 3}
key_to_remove = 'b'
if key_to_remove in my_dict:
    del my_dict[key_to_remove]
    print(f"Key '{key_to_remove}' removed.")
else:
    print(f"Key '{key_to_remove}' not found.")

print("Updated dictionary:", my_dict)



#Problem 14
dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}
merged_dict = {**dict1, **dict2}
print("Dictionary 1:", dict1)
print("Dictionary 2:", dict2)
print("Merged dictionary:", merged_dict)




#Problem 15
my_dict = {'a': 1, 'b': 2, 'c': 3}
length = len(my_dict)
print("Dictionary:", my_dict)
print("Number of items in dictionary:", length)


#Problem 16
my_dict = {'a': 10, 'b': 20, 'c': 30}
total = sum(my_dict.values())
print("Dictionary:", my_dict)
print("Sum of all values:", total)



#Problem 17
my_tuple = (10, 20, 30, 40, 50)
element = 30
if element in my_tuple:
    print(f"{element} is present in the tuple.")
else:
    print(f"{element} is NOT present in the tuple.")



#Problem 18
my_tuple = (10, 20, 30, 40, 50)
element = 30
if element in my_tuple:
    index = my_tuple.index(element)
    print(f"The element {element} is found at index {index}.")
else:
    print(f"The element {element} is NOT found in the tuple.")



#Problem 19
my_tuple = (10, 5, 30, 2, 50)
minimum = min(my_tuple)
maximum = max(my_tuple)
print("Tuple:", my_tuple)
print("Minimum value:", minimum)
print("Maximum value:", maximum)



#Problem 20
my_tuple = (1, 2, 3, 4, 5)
length = len(my_tuple)
print("Tuple:", my_tuple)
print("Length of the tuple:", length)
